{"version":3,"sources":["components/layout/assets/img/brand/logo.png","components/layout/loginheaderbg.js","http-common.js","services/users.js","components/layout/email_verification.js","components/layout/loginindex.js","components/layout/headerbg.js","components/layout/navtop.js","components/layout/footer.js","components/layout/dashboard.js","components/layout/sidebar.js","components/layout/pagination.js","components/user/index.js","components/user/profile.js","components/user/add_staff.js","components/user/edit_staff.js","services/category.js","components/category/index.js","components/category/switch.js","components/category/add.js","components/layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginHeaderbg","Fragment","className","style","height","src","logo","x","y","viewBox","preserveAspectRatio","version","xmlns","points","Component","axios","create","baseURL","headers","data","http","post","Cookies","get","body","id","put","delete","title","LoginIndex","props","state","match","params","message","handleCheck","bind","event","this","UserService","verifyEmail","then","response","console","log","status","toast","error","setState","success","catch","e","color","errors","username","userid","usertype","type","password","handleChange","handleSubmit","target","inputName","name","value","currentTarget","checkValidity","preventDefault","stopPropagation","login","payload","token","expires","loggedin","Form","method","noValidate","validated","onSubmit","Row","Group","as","Col","md","controlId","Control","required","placeholder","defaultValue","onChange","Feedback","aria-describedby","email","Button","Headerbg","Navtop","logout","href","role","data-toggle","aria-haspopup","aria-expanded","alt","onClick","Footer","Index","chart","chartData","labels","datasets","label","backgroudColor","borderWidth","Sidebar","data-target","aria-controls","aria-label","to","Pagination","handleClick","i","handlePaginationChange","previousDisable","paginationVariable","page","nextDisable","total_pages","items","active","push","class","tabindex","Users","confirm","confirmAlert","customUI","onClose","handleClickDelete","total_records","Math","ceil","per_page","retrieveUsers","confirmApprove","handleClickApprove","update","verify","onChangeSearchTitle","onChangefilter","users","searchTitle","dnone","staffType","getAll","page_number","scope","colspan","map","user","index","u_username","u_email","u_mobile","Profile","handlePassworsSubmit","mobile","cpassword","className1","retrieveUserDetail","getUserDetail","u_name","u_uuid","roles","region","area","rsms","asms","for","Category","updateStatus","checked","isactive","CategoryService","history","retrieveTherapies","orderHandler","el","document","querySelectorAll","forEach","item","getAttribute","display","getElementById","updateOrder","order","hideIcon","element","therapies","therapy","cat_name","cat_uuid","Add","retrieveTherapyDetail","h3","buttonTXT","undefined","isUserLoggedIn","sessionCookie","loginStatus","exact","path","component","Dashboard","addCategory","Categories","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.47c44dc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.11b04b7a.png\";","import React, { Component } from \"react\";\r\nimport logo from './assets/img/brand/logo.png';\r\nclass LoginHeaderbg extends Component {\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"header bg-gradient-primary py-7 py-lg-8\">\r\n            <div className=\"container\">\r\n                <div className=\"header-body text-center\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-5 col-md-6\">\r\n                    <h1 className=\"text-white\"><img style={{height:200}} src={logo} /></h1>\r\n                    {/* <p className=\"text-lead text-light\">Use these awesome forms to login or create new account in your project for free.</p> */}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\r\n                <svg x=\"0\" y=\"0\" viewBox=\"0 0 2560 100\" preserveAspectRatio=\"none\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <polygon className=\"fill-default\" points=\"2560 0 2560 100 0 100\"></polygon>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default LoginHeaderbg;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  //baseURL: \"http://localhost:3001\",\r\n  baseURL: \"http://dev7.invitocreatives.com/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nclass UserDataService {\r\n  getAll(data) {\r\n    return http.post(\"/admin/users-list\", data, {\r\n      headers: { 'Authorization' : 'Bearer '+Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  getManagers(data) {\r\n    return http.post(\"/users-managers\", data, {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  getUserDetail(data) {\r\n    return http.get(\"/user-detail\", {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/users/${id}`, {\r\n      //headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/users/${id}`, data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/users/${id}`, {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/users`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/users?title=${title}`);\r\n  }\r\n\r\n  login(data) {\r\n    return http.post(\"/login\", data);\r\n  }\r\n\r\n  loginStatus(data) {\r\n    return http.post(\"/login-status\", data);\r\n  }\r\n\r\n  getUserTypes() {\r\n    return http.get(\"/user-type-list\", {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  region() {\r\n    return http.get(\"/region\", {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  states() {\r\n    return http.get(\"/states\", {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  area(data) {\r\n    return http.post(\"/area\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  cities(data) {\r\n    return http.post(\"/cities\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  rsmList(data) {\r\n    return http.post(\"/rsm-list\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  asmList(data) {\r\n    return http.post(\"/asm-list\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n  verifyEmail(data) {\r\n    return http.post(\"/verify-email\", data);\r\n  }\r\n}\r\n\r\nexport default new UserDataService();","import React, { Component } from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport UserService from \"../../services/users\";\r\nimport {  toast } from 'react-toastify';    \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\nclass LoginIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id : this.props.match.params.id,\r\n      message : ''\r\n    };\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n  }\r\n\r\n  handleCheck (event) {\r\n    //this.setState({ className : '', errors : ''  } );\r\n    if ( this.state.id ) {\r\n      UserService.verifyEmail( { id : this.state.id } )\r\n      .then(response => {\r\n\t\t  console.log('response',response);\r\n          if ( response.data.status == false ) {\r\n            toast.error(response.data.message);\r\n            this.setState({ message : response.data.message  } );\r\n          } else {\r\n            toast.success(response.data.message);\r\n            this.setState({ message : response.data.message  } );\r\n          }\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n    } else {\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.handleCheck();\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.chart()\r\n  // }\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"container mt--8 pb-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-lg-5 col-md-7\">\r\n                <div className=\"card bg-secondary shadow border-0\">\r\n                    <div className=\"card-body px-lg-5 py-lg-5\">\r\n                    <div className=\"text-center text-muted mb-4\">\r\n                        <small>Verification Status</small>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <span style={{color : 'red'}}>{this.state.errors}</span>\r\n                    </div>\r\n                    <p>{this.state.message}</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n      {/* <Footer></Footer> */}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default LoginIndex;","import React, { Component } from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport UserService from \"../../services/users\";\r\nclass LoginIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username : '',\r\n      userid : '',\r\n      usertype : '',\r\n      type : 0,\r\n      password : '',\r\n      errors : ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    console.log('calling',event.target);\r\n    let inputName = event.target.name;\r\n    this.setState({ [inputName] : event.target.value });\r\n    console.log('here is the state',this.state);\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    this.setState({ className : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ 'className' : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        name : this.state.username,\r\n        password : this.state.password\r\n      };\r\n      UserService.login(data)\r\n      .then(response => {\r\n        console.log('response',response.data.status);\r\n        if ( response.data.status == false ) {\r\n          this.setState({ className : 'was-validated', errors : response.data.message  } );\r\n        } else {\r\n          Cookies.remove(\"session\");\r\n          Cookies.set(\"session\", response.data.payload.token, { expires: 2 });\r\n          console.log('cookies',Cookies.get());\r\n          this.props.loggedin();\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // this.chart()\r\n    // console.log('this.state',this.state);\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.chart()\r\n  // }\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"container mt--8 pb-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-lg-5 col-md-7\">\r\n                <div className=\"card bg-secondary shadow border-0\">\r\n                    <div className=\"card-body px-lg-5 py-lg-5\">\r\n                    <div className=\"text-center text-muted mb-4\">\r\n                        <small>Sign In</small>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <span style={{color : 'red'}}>{this.state.errors}</span>\r\n                    </div>\r\n                    <Form method=\"post\" className={this.state.className} noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                        <Form.Row>\r\n                            <Form.Group className=\"form-group mb-3\" as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n                                <div className=\"input-group input-group-alternative\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"ni ni-mobile-button\"></i></span>\r\n                                    </div>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        placeholder=\"Username\"\r\n                                        defaultValue=\"\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\r\n                                <div className=\"input-group input-group-alternative\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"ni ni-lock-circle-open\"></i></span>\r\n                                    </div>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        aria-describedby=\"inputGroupPrepend\"\r\n                                        required\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {/* <Form.Group>\r\n                            <Form.Check\r\n                            required\r\n                            label=\"Agree to terms and conditions\"\r\n                            feedback=\"You must agree before submitting.\"\r\n                            />\r\n                        </Form.Group> */}\r\n                        <div className=\"text-center\">\r\n                          <Button type=\"submit\">Login</Button>\r\n                        </div>\r\n                    </Form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n      {/* <Footer></Footer> */}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default LoginIndex;","import React, { Component } from \"react\";\r\n\r\nclass Headerbg extends Component {\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\r\n                <div className=\"container-fluid\">\r\n                    {/* <div className=\"header-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-6\">\r\n                            <div className=\"card card-stats mb-4 mb-xl-0\">\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                    <h5 className=\"card-title text-uppercase text-muted mb-0\">Traffic</h5>\r\n                                    <span className=\"h2 font-weight-bold mb-0\">350,897</span>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                    <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\r\n                                        <i className=\"fas fa-chart-bar\"></i>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                    <span className=\"text-success mr-2\"><i className=\"fa fa-arrow-up\"></i> 3.48%</span>\r\n                                    <span className=\"text-nowrap\">Since last month</span>\r\n                                </p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-6\">\r\n                            <div className=\"card card-stats mb-4 mb-xl-0\">\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                    <h5 className=\"card-title text-uppercase text-muted mb-0\">New users</h5>\r\n                                    <span className=\"h2 font-weight-bold mb-0\">2,356</span>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                    <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\r\n                                        <i className=\"fas fa-chart-pie\"></i>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                    <span className=\"text-danger mr-2\"><i className=\"fas fa-arrow-down\"></i> 3.48%</span>\r\n                                    <span className=\"text-nowrap\">Since last week</span>\r\n                                </p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-6\">\r\n                            <div className=\"card card-stats mb-4 mb-xl-0\">\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                    <h5 className=\"card-title text-uppercase text-muted mb-0\">Sales</h5>\r\n                                    <span className=\"h2 font-weight-bold mb-0\">924</span>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                    <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\r\n                                        <i className=\"fas fa-users\"></i>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                    <span className=\"text-warning mr-2\"><i className=\"fas fa-arrow-down\"></i> 1.10%</span>\r\n                                    <span className=\"text-nowrap\">Since yesterday</span>\r\n                                </p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-6\">\r\n                            <div className=\"card card-stats mb-4 mb-xl-0\">\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                    <h5 className=\"card-title text-uppercase text-muted mb-0\">Performance</h5>\r\n                                    <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                    <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\r\n                                        <i className=\"fas fa-percent\"></i>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                    <span className=\"text-success mr-2\"><i className=\"fas fa-arrow-up\"></i> 12%</span>\r\n                                    <span className=\"text-nowrap\">Since last month</span>\r\n                                </p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Headerbg;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from \"../../services/users\";\r\nclass Navtop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //username : ''\r\n        };\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.retrieveUserDetail();\r\n    // }\r\n\r\n    // retrieveUserDetail() {\r\n    //     UserService.getUserDetail({type : 1})\r\n    //       .then(response => {\r\n    //         if ( response.data.status == true ) {\r\n    //             console.log('response.data.payload',response.data.payload);\r\n    //             this.setState({\r\n    //                 username : response.data.payload.u_name,\r\n    //             });\r\n    //         }\r\n    //       })\r\n    //       .catch(e => {\r\n    //         console.log(e);\r\n    //       });\r\n    //   }\r\n  \r\n    logout = () => {\r\n        this.props.loggedin(false);\r\n    };\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <nav className=\"navbar navbar-top navbar-expand-md navbar-dark\" id=\"navbar-main\">\r\n\t\t  <div className=\"container-fluid\">\r\n                {/*<Link to={\"/\"} className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\">\r\n                    Dashboard\r\n\t\t\t\t</Link>*/}\r\n                <a className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\" href=\"./\"></a>\r\n                {/* <form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\r\n                    <div className=\"form-group mb-0\">\r\n                        <div className=\"input-group input-group-alternative\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"><i className=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <input className=\"form-control\" placeholder=\"Search\" type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                </form> */}\r\n                <ul className=\"navbar-nav align-items-center d-none d-md-flex\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link pr-0\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <div className=\"media align-items-center\">\r\n                        <span className=\"avatar avatar-sm rounded-circle\">\r\n                            <img alt=\"Image placeholder\" src={'./demo.png'}/>\r\n                        </span>\r\n                        {/* <div className=\"media-body ml-2 d-none d-lg-block\">\r\n                            <span className=\"mb-0 text-sm  font-weight-bold\">{this.state.username}</span>\r\n                        </div> */}\r\n                    </div>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-arrow dropdown-menu-right\">\r\n                        <div className=\" dropdown-header noti-title\">\r\n                            <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                        </div>\r\n                        {/* <Link to={\"/profile\"} className=\"dropdown-item\">\r\n                            <i className=\"ni ni-single-02\"></i> My profile\r\n                        </Link> */}\r\n                        {/* <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                            <i className=\"ni ni-settings-gear-65\"></i>\r\n                            <span>Settings</span>\r\n                        </a>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                            <i className=\"ni ni-calendar-grid-58\"></i>\r\n                            <span>Activity</span>\r\n                        </a>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                            <i className=\"ni ni-support-16\"></i>\r\n                            <span>Support</span>\r\n                        </a> */}\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a href=\"#!\" onClick={this.logout} className=\"dropdown-item\">\r\n                            <i className=\"ni ni-user-run\"></i>\r\n                            <span>Logout</span>\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Navtop;","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <footer className=\"footer\">\r\n            <div className=\"row align-items-center justify-content-xl-between\">\r\n            <div className=\"col-xl-6\">\r\n                <div className=\"copyright text-center text-xl-left text-muted\">\r\n                &copy; 2021 <a href=\"https://www.invitosoftwaresolutions.com/\" className=\"font-weight-bold ml-1\" target=\"_blank\">Invito Software Solutions</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-6\">\r\n                {/* <ul className=\"nav nav-footer justify-content-center justify-content-xl-end\">\r\n                  <li className=\"nav-item\">\r\n                      <a href=\"https://www.creative-tim.com\" className=\"nav-link\" target=\"_blank\">Creative Tim</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                      <a href=\"https://www.creative-tim.com/presentation\" className=\"nav-link\" target=\"_blank\">About Us</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                      <a href=\"http://blog.creative-tim.com\" className=\"nav-link\" target=\"_blank\">Blog</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                      <a href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md\" className=\"nav-link\" target=\"_blank\">MIT License</a>\r\n                  </li>\r\n                </ul> */}\r\n            </div>\r\n            </div>\r\n        </footer>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Footer;","import React, { Component } from \"react\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport Footer from \"./footer\";\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData : {},\r\n      //setChartData : {},\r\n    };\r\n    this.chart = this.chart.bind(this);\r\n    //this.setChartData = this.setChartData.bind(this);\r\n  }\r\n\r\n  chart = () => {\r\n    this.setState({ chartData : {\r\n      labels : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\r\n      datasets : [\r\n        {\r\n          label : 'Label of thickness',\r\n          data : [15, 68, 52,68, 35],\r\n          backgroudColor: [\r\n            'rgba(75, 192, 192, 0.6)'\r\n          ],\r\n          borderWidth : 4\r\n        }\r\n      ]\r\n    } });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.chart()\r\n    console.log('this.state',this.state);\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.chart()\r\n  // }\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"container-fluid mt--7\">\r\n            <div className=\"row\">\r\n                \r\n        \r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-xl-8 mb-5 mb-xl-0\">\r\n          \r\n        </div>\r\n        <div className=\"col-xl-4\">\r\n          \r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Index;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from './assets/img/brand/logo.png';\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n   \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          {/* <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n            Home\r\n            </a>\r\n            <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link to={\"/users\"} className=\"nav-link\">\r\n                Users\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to={\"/users/add\"} className=\"nav-link\">\r\n                Add\r\n                </Link>\r\n            </li>\r\n            </div>\r\n        </nav> */}\r\n        <nav className=\"navbar navbar-vertical fixed-left navbar-expand-md navbar-light bg-white\" id=\"sidenav-main\">\r\n            <div className=\"container-fluid\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidenav-collapse-main\" aria-controls=\"sidenav-main\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <Link to={\"/\"} className=\"navbar-brand pt-0\">\r\n                <img src={logo} className=\"navbar-brand-img\" alt=\"...\"/>\r\n            </Link>\r\n            <ul className=\"nav align-items-center d-md-none\">\r\n                {/* <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link nav-link-icon\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"ni ni-bell-55\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-arrow dropdown-menu-right\" aria-labelledby=\"navbar-default_dropdown_1\">\r\n                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                </li> */}\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <div className=\"media align-items-center\">\r\n                        <span className=\"avatar avatar-sm rounded-circle\">\r\n                            {/* <img alt=\"Image placeholder\" src=\"./assets/img/theme/team-1-800x800.jpg\"/> */}\r\n                            <img alt=\"Image placeholder\" src={'./demo.png'}/>\r\n                        </span>\r\n                        </div>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-arrow dropdown-menu-right\">\r\n                        <div className=\" dropdown-header noti-title\">\r\n                        <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                        </div>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                        <i className=\"ni ni-single-02\"></i>\r\n                        <span>My profile</span>\r\n                        </a>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                        <i className=\"ni ni-settings-gear-65\"></i>\r\n                        <span>Settings</span>\r\n                        </a>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                        <i className=\"ni ni-calendar-grid-58\"></i>\r\n                        <span>Activity</span>\r\n                        </a>\r\n                        <a href=\"./examples/profile.html\" className=\"dropdown-item\">\r\n                        <i className=\"ni ni-support-16\"></i>\r\n                        <span>Support</span>\r\n                        </a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a href=\"#!\" className=\"dropdown-item\">\r\n                        <i className=\"ni ni-user-run\"></i>\r\n                        <span>Logout</span>\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <div className=\"collapse navbar-collapse\" id=\"sidenav-collapse-main\">\r\n                <div className=\"navbar-collapse-header d-md-none\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 collapse-brand\">\r\n                    {/* <a href=\"./index.html\">\r\n                        <img src=\"./assets/img/brand/blue.png\"/>\r\n                    </a> */}\r\n                    <Link to={\"/\"}>\r\n                        <img src={logo} className=\"navbar-brand-img\" alt=\"...\"/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className=\"col-6 collapse-close\">\r\n                        <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#sidenav-collapse-main\" aria-controls=\"sidenav-main\" aria-expanded=\"false\" aria-label=\"Toggle sidenav\">\r\n                            <span></span>\r\n                            <span></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                {/* <form className=\"mt-4 mb-3 d-md-none\">\r\n                    <div className=\"input-group input-group-rounded input-group-merge\">\r\n                        <input type=\"search\" className=\"form-control form-control-rounded form-control-prepended\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <span className=\"fa fa-search\"></span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </form> */}\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item  active \">\r\n                        <Link to={\"/\"} className=\"nav-link  active \">\r\n                            <i className=\"ni ni-tv-2 text-primary\"></i> Dashboard\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/users\"} className=\"nav-link\">\r\n                        <i className=\"ni ni-single-02 text-yellow\"></i> Users\r\n                        </Link>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link to={\"/categories\"} className=\"nav-link\">\r\n                        <i className=\"fa fa-medkit\"></i> Categories\r\n                        </Link>\r\n                    </li> */}\r\n                    {/*<li className=\"nav-item\">\r\n                        <Link to={\"/test-list\"} className=\"nav-link\">\r\n                        <i className=\"fa fa-vial\"></i> Test List\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/do-dont\"} className=\"nav-link\">\r\n                        <i className=\"fa fa-prescription\"></i> Do's & Dont's\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/diet-exercise\"} className=\"nav-link\">\r\n                        <i className=\"fa fa-plus\"></i> Diet & Exercise\r\n                        </Link>\r\n\t\t\t\t\t</li> \r\n\r\n                    \r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/patients\"} className=\"nav-link\">\r\n                        <i class=\"fa fa-wheelchair\"></i> Patients\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/viral-load-test\"} className=\"nav-link\">\r\n                        <i class=\"fa fa-syringe\"></i> Viral Load Test\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/purchase-request\"} className=\"nav-link\">\r\n                        <i class=\"fa fa-shopping-cart\"></i> Purchase Request\r\n                        </Link>\r\n                    </li>*/}\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Sidebar;","import React, { Component } from \"react\";\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(i) {\r\n        this.props.handlePaginationChange(i);\r\n    }\r\n\r\n    render() {\r\n        let previousDisable = this.props.paginationVariable.page == 0 ? 'disabled' : '';\r\n        let nextDisable = this.props.paginationVariable.page == this.props.paginationVariable.total_pages-1 ? 'disabled' : '';\r\n        let items = [];\r\n        console.log(items);\r\n        for ( let i = 0; i <= this.props.paginationVariable.total_pages-1; i++ ) {\r\n            let active='';\r\n            if ( this.props.paginationVariable.page == i ) {\r\n                active='active';\r\n            }\r\n            if ( this.props.paginationVariable.total_pages > 10 ) {\r\n                //if ( i <= 0 || (this.props.paginationVariable.page && i >= this.props.paginationVariable.page - 2 && i <= this.props.paginationVariable.page + 2) || i > this.props.paginationVariable.total_pages - 0 ) {\r\n                if ( i > this.props.paginationVariable.page + 2 ) {\r\n                    if ( this.props.paginationVariable.total_pages - i < 4 ) {\r\n                        items.push(<li className={'page-item '+active }>\r\n                            <a className=\"page-link\" href=\"#!\" value={i} onClick={() => this.handleClick(i)}>{i+1}</a>\r\n                        </li>)\r\n                    } else {\r\n                        items.push(<li className={'page-item '+active }>\r\n                            . \r\n                        </li>)\r\n                    }\r\n                } else {\r\n                    if ( i > this.props.paginationVariable.page - 2 ) {\r\n                        items.push(<li className={'page-item '+active }>\r\n                            <a className=\"page-link\" href=\"#!\" value={i} onClick={() => this.handleClick(i)}>{i+1}</a>\r\n                        </li>)\r\n                    }\r\n                }\r\n            } else {\r\n                items.push(<li className={'page-item '+active }>\r\n                        <a className=\"page-link\" href=\"#!\" value={i} onClick={() => this.handleClick(i)}>{i+1}</a>\r\n                    </li>)\r\n            }\r\n        }\r\n        if ( this.props.paginationVariable.total_pages  > 1 ) {\r\n            return (\r\n                <React.Fragment>\r\n                                <div class=\"card-footer py-4\">\r\n                        <nav aria-label=\"...\">\r\n                            <ul class=\"pagination justify-content-end mb-0\">\r\n                                <li className={'page-item '+ previousDisable }>\r\n                                    <a class=\"page-link\" href=\"#!\" onClick={() => this.handleClick(this.props.paginationVariable.page-1)} tabindex=\"-1\">\r\n                                    <i class=\"fas fa-angle-left\"></i>\r\n                                    <span class=\"sr-only\">Previous</span>\r\n                                    </a>\r\n                                </li>\r\n                                {items}\r\n                                <li className={'page-item '+ nextDisable }>\r\n                                    <a class=\"page-link\" href=\"#!\" onClick={() => this.handleClick(this.props.paginationVariable.page+1)} >\r\n                                    <i class=\"fas fa-angle-right\"></i>\r\n                                    <span class=\"sr-only\">Next</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n  }\r\n  \r\n  export default Pagination;","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/users\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../layout/pagination\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {  toast } from 'react-toastify'; \r\nimport Moment from 'react-moment';\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.onChangefilter = this.onChangefilter.bind(this);\r\n    this.handlePaginationChange = this.handlePaginationChange.bind(this);\r\n\r\n    this.retrieveUsers = this.retrieveUsers.bind(this);\r\n\r\n    this.state = {\r\n        users: [],\r\n        //staffType: '',\r\n        searchTitle: '',\r\n        per_page : 5,\r\n        total_records : 0,\r\n        page : 0,\r\n        total_pages : 1,\r\n\r\n        dnone : 'd-none',\r\n    };\r\n  }\r\n\r\n  confirm = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui'>\r\n            <h1>Are you sure?</h1>\r\n            <p>You want to delete this user?</p>\r\n            <button onClick={onClose}>No</button>\r\n            <button\r\n              onClick={() => {\r\n                this.handleClickDelete(id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it!\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  handleClickDelete = (id) => {\r\n    UserService.delete(id)\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n        } else {\r\n          toast.success(response.data.message);\r\n          let total_records = this.state.total_records-1;\r\n          let total_pages = Math.ceil(total_records/this.state.per_page);\r\n          let page = this.state.page;\r\n          if ( page > total_pages-1 ) {\r\n            page = total_pages-1;\r\n            this.setState({\r\n              page : total_pages-1,\r\n            },() => {\r\n              this.retrieveUsers();\r\n            });\r\n          } else {\r\n            this.retrieveUsers();\r\n          }\r\n          //this.props.history.push(\"/staff\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  confirmApprove = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui'>\r\n            <h1>Are you sure?</h1>\r\n            <p>You want to approve this user?</p>\r\n            <button onClick={onClose}>No</button>\r\n            <button\r\n              onClick={() => {\r\n                this.handleClickApprove(id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Approve it!\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClickApprove = (id) => {\r\n    let data = {\r\n      verify : '1',\r\n    };\r\n    UserService.update( id, data )\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n        } else {\r\n          toast.success(response.data.message);\r\n          this.retrieveUsers();\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  onChangefilter(e) {\r\n    /*this.setState({\r\n        staffType: e.target.value\r\n    });\r\n    this.retrieveUsers();*/\r\n    this.setState({\r\n        staffType: e.target.value,\r\n        page : 0,\r\n    }, () => {\r\n        this.retrieveUsers();\r\n    });\r\n  }\r\n\r\n  handlePaginationChange(page) {\r\n    this.setState({\r\n      page : page \r\n    },() => {\r\n      this.retrieveUsers();\r\n    });\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    this.setState({\r\n      searchTitle: e.target.value,\r\n      page : 0\r\n    },()=>{\r\n      this.retrieveUsers();\r\n    });\r\n  }\r\n\r\n  retrieveUsers() {\r\n    this.setState({\r\n      dnone : '',\r\n    });\r\n    let data = {\r\n        //staffType : this.state.staffType,\r\n        searchTitle : this.state.searchTitle,\r\n        page : this.state.page,\r\n        per_page : this.state.per_page\r\n    };\r\n\r\n    UserService.getAll(data)\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data.payload.data,\r\n          total_records : response.data.payload.total_records,\r\n          page : response.data.payload.page_number,\r\n          total_pages : response.data.payload.total_pages,\r\n          dnone : 'd-none',\r\n        });\r\n        //console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { users, per_page, total_records, page, total_pages } = this.state;\r\n    let paginationVariable = {\r\n        per_page : per_page,\r\n        total_records : total_records,\r\n        page : page,\r\n        total_pages : total_pages\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card shadow\">\r\n                        <div class=\"card-header border-0\">\r\n                            {/* <h3 class=\"mb-0\">Card tables</h3> */}\r\n                            <div class=\"row align-items-center\">\r\n                                <div class=\"col-7\">\r\n                                    <h3 class=\"mb-0\">User List</h3>\r\n                                </div>\r\n                                {/* <div class=\"col-3\">\r\n                                    <select onChange={this.onChangefilter} class=\"form-control\">\r\n                                        <option  value=\"\">All</option>\r\n                                        <option  value=\"2\">ADMIN</option>\r\n                                        <option  value=\"3\">RSM</option>\r\n                                        <option  value=\"4\">ASM</option>\r\n                                        <option  value=\"5\">TSM</option>\r\n                                    </select>\r\n                                </div> */}\r\n                                <div class=\"col-5\">\r\n                                    <input class=\"form-control\" onChange={this.onChangeSearchTitle} type=\"text\" placeholder=\"Search by username/email/mobile\"></input>\r\n                                </div>\r\n                                {/* <div class=\"col-2 text-right\">\r\n                                    <Link to={\"/add-staff\"} className=\"btn btn-sm btn-primary\">\r\n                                        Add New\r\n                                    </Link>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive\">\r\n                        <table class=\"table align-items-center table-flush\">\r\n                            <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Username</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile</th>\r\n                                {/* <th scope=\"col\">Votes</th>\r\n                                <th scope=\"col\">Rank</th> */}\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td colspan=\"4\" className={this.state.dnone} style={{ 'text-align' : 'center' }} >\r\n                                  <div className={\"spinner-border \"}></div>\r\n                                </td>\r\n                            </tr>\r\n                            {users && users.map((user, index) => (\r\n                                <tr>\r\n                                    <td>\r\n                                        {/* <img style={{\"max-height\": \"50px\",\"border-radius\":\"100%\"}} src={user.u_image} alt=\"no image\" /> */}\r\n                                    </td>\r\n                                    <td>\r\n                                      {user.u_username}\r\n                                    </td>\r\n                                    <td>\r\n                                      {user.u_email}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.u_mobile}\r\n                                        {/* <Moment format=\"YYYY-MM-DD\">\r\n                                          {user.u_mobile}\r\n                                        </Moment> */}\r\n                                    </td>\r\n                                    {/* <td class=\"text-left\">\r\n                                        {user.liker.length}\r\n                                    </td>\r\n                                    <td class=\"text-left\">\r\n                                        {user.rank}\r\n                                    </td> */}\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                        <Pagination paginationVariable={paginationVariable} handlePaginationChange={this.handlePaginationChange}/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/users\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\n//import { ToastContainer } from \"react-toastr\";\r\nimport { ToastContainer, toast } from 'react-toastify';    \r\nimport 'react-toastify/dist/ReactToastify.css';    \r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handlePassworsSubmit = this.handlePassworsSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      name : '',\r\n      mobile : '',\r\n      id : '',\r\n      password : '',\r\n      cpassword : '',\r\n      className : '',\r\n      className1 : '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUserDetail();\r\n  }\r\n\r\n\r\n  retrieveUserDetail() {\r\n    UserService.getUserDetail({type : 1})\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            console.log('response.data.payload',response.data.payload);\r\n            this.setState({\r\n                name : response.data.payload.u_name,\r\n                mobile : response.data.payload.u_mobile,\r\n                id : response.data.payload.u_uuid\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    let inputName = event.target.name;\r\n    this.setState({ [inputName] : event.target.value });\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    this.setState({ className : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ className : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        mobile : this.state.mobile,\r\n        name : this.state.name,\r\n      };\r\n      UserService.update(this.state.id,data)\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n          this.setState({ className : 'was-validated'  } );\r\n        } else {\r\n          toast.success(response.data.message);\r\n          //this.props.history.push(\"/staff\");\r\n          this.retrieveUserDetail();\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handlePassworsSubmit (event) {\r\n    this.setState({ className1 : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ className : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        password : this.state.password,\r\n        cpassword : this.state.cpassword,\r\n      };\r\n      UserService.update(this.state.id,data)\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n          this.setState({ className1 : 'was-validated'  } );\r\n        } else {\r\n          toast.success(response.data.message);\r\n          this.setState({ password : '', cpassword : '' } );\r\n          //this.props.history.push(\"/staff\");\r\n          //this.retrieveUserDetail();\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { roles, region, area, rsms, asms } = this.state;\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card bg-secondary shadow\">\r\n                        <div class=\"card-header bg-white border-0\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col-8\">\r\n                            <h3 class=\"mb-0\">Update Profile</h3>\r\n                            </div>\r\n                            <div class=\"col-4 text-right\">\r\n                                {/* <Link to={\"/staff\"} className=\"btn btn-sm btn-primary\">\r\n                                    Staff List\r\n                                </Link> */}\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 order-xl-1 mb-5 mb-xl-0\">\r\n                                    <Form method=\"post\" className={this.state.className} noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                                        <h6 class=\"heading-small text-muted mb-4\">User information</h6>\r\n                                        <div class=\"pl-lg-4\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"form-control-label\" for=\"input-username\">Name</label>\r\n                                                        <input required type=\"text\" name=\"name\" value={this.state.name} class=\"form-control form-control-alternative\" onChange={this.handleChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"form-control-label\" for=\"input-email\">Mobile</label>\r\n                                                        <input required type=\"number\" id=\"input-email\" class=\"form-control form-control-alternative\" name=\"mobile\" onChange={this.handleChange} value={this.state.mobile}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <button type=\"submit\" class=\"btn btn-primary my-4\">Update</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                               \r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                                <div class=\"col-xl-6 order-xl-2 mb-5 mb-xl-0\">\r\n                                    <Form method=\"post\" className={this.state.className1} noValidate validated={this.validated} onSubmit={this.handlePassworsSubmit}>\r\n                                        <h6 class=\"heading-small text-muted mb-4\">Change Password</h6>\r\n                                        <div class=\"pl-lg-4\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"form-control-label\" for=\"input-username\">Password</label>\r\n                                                        <input required type=\"text\" name=\"password\" value={this.state.password} class=\"form-control form-control-alternative\" onChange={this.handleChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"form-control-label\" for=\"input-email\">Confirm Password</label>\r\n                                                        <input required type=\"text\" id=\"input-email\" class=\"form-control form-control-alternative\" name=\"cpassword\" onChange={this.handleChange} value={this.state.cpassword}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <button type=\"submit\" class=\"btn btn-primary my-4\">Update</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/users\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport {  toast } from 'react-toastify';    \r\nimport 'react-toastify/dist/ReactToastify.css';    \r\n\r\nclass AddStaff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.retrieveUserTypes = this.retrieveUserTypes.bind(this);\r\n\r\n    this.region = this.region.bind(this);\r\n    this.area = this.area.bind(this);\r\n\r\n    // this.states = this.states.bind(this);\r\n    // this.cities = this.cities.bind(this);\r\n\r\n    this.loadRegion = this.loadRegion.bind(this);\r\n    this.loadAreas = this.loadAreas.bind(this);\r\n\r\n    // this.loadStates = this.loadStates.bind(this);\r\n    // this.loadCities = this.loadCities.bind(this);\r\n\r\n    this.loadType = this.loadType.bind(this);\r\n\r\n    this.rsmList = this.rsmList.bind(this);\r\n    this.asmList = this.asmList.bind(this);\r\n\r\n    this.loadRSM = this.loadRSM.bind(this);\r\n    this.loadASM = this.loadASM.bind(this);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n\r\n    this.state = {\r\n      roles: [],\r\n\r\n      region: [],\r\n      area: [],\r\n\r\n      // states: [],\r\n      // cities: [],\r\n\r\n      rsms: [],\r\n      asms: [],\r\n\r\n      regionDisplay : 'none',\r\n      areaDisplay : 'none',\r\n\r\n      // stateDisplay : 'none',\r\n      // cityDisplay : 'none',\r\n\r\n      rsmDisplay : 'none',\r\n      asmDisplay : 'none',\r\n\r\n      type : '',\r\n\r\n      regionId : '',\r\n      areaId : '',\r\n      // stateId : '',\r\n      // cityId : '',\r\n\r\n      rsmId : '',\r\n      asmId : '',\r\n\r\n      regionRequired : false,\r\n      areaRequired : false,\r\n\r\n      // stateRequired : false,\r\n      // cityRequired : false,\r\n      \r\n      rsmRequired : false,\r\n      asmRequired : false,\r\n\r\n      name : '',\r\n      mobile : '',\r\n\r\n      className : '',\r\n      dnone : 'd-none',\r\n\r\n      /*currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"*/\r\n\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    let inputName = event.target.name;\r\n    this.setState({ [inputName] : event.target.value });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit (event) {\r\n    console.log('handleSubmit',this.state);\r\n    this.setState({ className : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      console.log('validiey false');\r\n      this.setState({ className : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      console.log('validiey false else');\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        mobile : this.state.mobile,\r\n        name : this.state.name,\r\n        type : this.state.type,\r\n        // stateId : this.state.stateId,\r\n        // cityId : this.state.cityId,\r\n        regionId : this.state.regionId,\r\n        areaId : this.state.areaId,\r\n        rsmId : this.state.rsmId,\r\n        asmId : this.state.asmId,\r\n      };\r\n\r\n      UserService.create(data)\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n          this.setState({ className : 'was-validated'  } );\r\n        } else {\r\n          toast.success(response.data.message);\r\n          this.props.history.push(\"/staff\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUserTypes();\r\n  }\r\n\r\n async loadRegion(e) {\r\n    this.setState({\r\n      region: [],\r\n      area: [],\r\n      rsms: [],\r\n      asms: [],\r\n      regionDisplay: 'none',\r\n      areaDisplay: 'none',\r\n      rsmDisplay: 'none',\r\n      asmDisplay: 'none',\r\n      regionRequired : false,\r\n      areaRequired : false,\r\n      rsmRequired : false,\r\n      asmRequired : false,\r\n    });\r\n    if( e.target.value != '' ) {\r\n      if( e.target.value != 2 ) {\r\n        this.setState({dnone : ''});\r\n        await this.region();\r\n        this.setState({\r\n          regionDisplay: 'block',\r\n          regionRequired : true,\r\n          areaRequired : false,\r\n          rsmRequired : false,\r\n          asmRequired : false,\r\n          areaDisplay: 'none',\r\n          rsmDisplay: 'none',\r\n          asmDisplay: 'none',\r\n          type : e.target.value,\r\n          regionId : '',\r\n          areaId : '',\r\n          rsmId : '',\r\n          asmId : '',\r\n          dnone : 'd-none',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          regionRequired : false,\r\n          areaRequired : false,\r\n          rsmRequired : false,\r\n          asmRequired : false,\r\n          regionDisplay: 'none',\r\n          areaDisplay: 'none',\r\n          rsmDisplay: 'none',\r\n          asmDisplay: 'none',\r\n          type : e.target.value,\r\n          regionId : '',\r\n          areaId : '',\r\n          rsmId : '',\r\n          asmId : '',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*async loadStates(e) {\r\n    this.setState({\r\n      states: [],\r\n      cities: [],\r\n      rsms: [],\r\n      asms: [],\r\n      stateDisplay: 'none',\r\n      cityDisplay: 'none',\r\n      rsmDisplay: 'none',\r\n      asmDisplay: 'none',\r\n      stateRequired : false,\r\n      cityRequired : false,\r\n      rsmRequired : false,\r\n      asmRequired : false,\r\n    });\r\n    if( e.target.value != '' ) {\r\n      if( e.target.value != 2 ) {\r\n        this.setState({dnone : ''});\r\n        await this.states();\r\n        this.setState({\r\n          stateDisplay: 'block',\r\n          stateRequired : true,\r\n          cityRequired : true,\r\n          cityRequired : false,\r\n          rsmRequired : false,\r\n          asmRequired : false,\r\n          cityDisplay: 'none',\r\n          rsmDisplay: 'none',\r\n          asmDisplay: 'none',\r\n          type : e.target.value,\r\n          stateId : '',\r\n          cityId : '',\r\n          rsmId : '',\r\n          asmId : '',\r\n          dnone : 'd-none',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          stateRequired : false,\r\n          cityRequired : false,\r\n          rsmRequired : false,\r\n          asmRequired : false,\r\n          stateDisplay: 'none',\r\n          cityDisplay: 'none',\r\n          rsmDisplay: 'none',\r\n          asmDisplay: 'none',\r\n          type : e.target.value,\r\n          stateId : '',\r\n          cityId : '',\r\n          rsmId : '',\r\n          asmId : '',\r\n        });\r\n      }\r\n    }\r\n  }*/\r\n\r\n  async loadAreas(e) {\r\n    console.log('asdfasdfa',e);\r\n    if ( e.target.value != '' ) {\r\n      this.setState({\r\n        area: [],\r\n        rsms: [],\r\n        asms: [],\r\n        areaDisplay: 'none',\r\n        areaRequired : false,\r\n        dnone : '',\r\n      });\r\n     await this.area(e.target.value);\r\n      this.setState({\r\n        areaDisplay: 'block',\r\n        rsmDisplay: 'none',\r\n        asmDisplay: 'none',\r\n        areaRequired : true,\r\n        rsmRequired : false,\r\n        asmRequired : false,\r\n        regionId : e.target.value,\r\n        dnone : 'd-none'\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  /*async loadCities(e) {\r\n    if ( e.target.value != '' ) {\r\n      this.setState({\r\n        cities: [],\r\n        rsms: [],\r\n        asms: [],\r\n        cityDisplay: 'none',\r\n        cityRequired : false,\r\n        dnone : '',\r\n      });\r\n     await this.cities(e.target.value);\r\n      this.setState({\r\n        cityDisplay: 'block',\r\n        rsmDisplay: 'none',\r\n        asmDisplay: 'none',\r\n        cityRequired : true,\r\n        rsmRequired : false,\r\n        asmRequired : false,\r\n        stateId : e.target.value,\r\n        dnone : 'd-none'\r\n      });\r\n    }\r\n    \r\n  }*/\r\n\r\n\r\n  async loadRSM(e) {\r\n    if ( e.target.value != '' ) {\r\n      this.setState({\r\n        rsms: [],\r\n        asms: [],\r\n        rsmDisplay: 'none',\r\n        rsmRequired : false,\r\n        asmDisplay: 'none',\r\n        asmRequired : false,\r\n      });\r\n      if ( this.state.type != 3 ) {\r\n        this.setState({dnone : ''});\r\n        await this.rsmList(this.state.regionId, e.target.value);\r\n        this.setState({\r\n          rsmDisplay: 'block',\r\n          asmDisplay: 'none',\r\n          rsmRequired : true,\r\n          asmRequired : false,\r\n          rsmId : '',\r\n          asmId : '',\r\n          areaId : e.target.value,\r\n          dnone : 'd-none'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          areaId : e.target.value,\r\n        });\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async loadASM(e) {\r\n    if ( e.target.value != '' ) {\r\n      this.setState({\r\n        asms: [],\r\n        asmDisplay: 'none',\r\n        asmRequired : false,\r\n      });\r\n        if ( this.state.type != 4 ) {\r\n          this.setState({dnone : ''});\r\n          await this.asmList(this.state.regionId, this.state.areaId);\r\n          this.setState({\r\n            asmDisplay: 'block',\r\n            asmRequired : true,\r\n            rsmId : e.target.value,\r\n            asmId : '',\r\n            dnone : 'd-none',\r\n          });\r\n        } else {\r\n          this.setState({\r\n            rsmId : e.target.value,\r\n          });\r\n        }\r\n    }\r\n  }\r\n\r\n  loadType(e) {\r\n    if ( e.target.value != '' ) {\r\n      if ( this.state.type == 5 ) {\r\n          this.setState({\r\n            asmDisplay: 'block',\r\n            asmRequired: true,\r\n            asmId : e.target.value,\r\n          });\r\n          if ( this.state.areaId != '' ) {\r\n            this.setState({\r\n              rmsId : e.target.value\r\n            });\r\n          } else {\r\n            this.setState({\r\n              rsmDisplay: 'block',\r\n              rsmRequired: true,\r\n              areaId : e.target.value\r\n            });\r\n            this.rsmList(this.state.regionId, e.target.value);\r\n          }\r\n      } else {\r\n        this.setState({\r\n          rsmId : e.target.value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  retrieveUserTypes() {\r\n    UserService.getUserTypes()\r\n      .then(response => {\r\n          console.log('retrieveUserTypes',response.data);\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                roles: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async region() {\r\n    await UserService.region()\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                region: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  /*async states() {\r\n    await UserService.states()\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                states: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }*/\r\n\r\n  async area(id) {\r\n    await UserService.area( { id : id } )\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                area: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  /*async cities(id) {\r\n    await UserService.cities( { id : id } )\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                cities: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }*/\r\n\r\n\r\n  async rsmList(regionId,areaId) {\r\n    await UserService.rsmList( { regionId : regionId, areaId : areaId, } )\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                rsms: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n  async asmList(regionId,areaId) {\r\n    await UserService.asmList( { regionId : regionId, areaId : areaId, } )\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                asms: response.data.payload\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { roles, states, cities, region, area, rsms, asms } = this.state;\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card bg-secondary shadow\">\r\n                        <div class=\"card-header bg-white border-0\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col-8\">\r\n                            <h3 class=\"mb-0\">Add New Staff Member</h3>\r\n                            </div>\r\n                            <div class=\"col-4 text-right\">\r\n                                <Link to={\"/staff\"} className=\"btn btn-sm btn-primary\">\r\n                                    Staff List\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                        <Form method=\"post\" className={this.state.className} noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                            <h6 class=\"heading-small text-muted mb-4\">User information</h6>\r\n                            <div class=\"pl-lg-4\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\">\r\n                                          <label class=\"form-control-label\" for=\"input-username\">User Type</label>\r\n                                          {/* <select onChange={this.loadStates} class=\"form-control\" required>\r\n                                              <option value=\"\">Select</option>\r\n                                              {roles && roles.map((roles, index) => (\r\n                                                  <option value={roles.ur_id}>{roles.ur_title}</option>\r\n                                              ))}\r\n                                          </select> */}\r\n                                          <select onChange={this.loadRegion} class=\"form-control\" required>\r\n                                              <option value=\"\">Select</option>\r\n                                              {roles && roles.map((roles, index) => (\r\n                                                  <option value={roles.ur_id}>{roles.ur_title}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.regionDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">Region</label>\r\n                                          {/* <select onChange={this.loadAreas} class=\"form-control\" required={this.state.regionRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {region && region.map((region, index) => (\r\n                                                  <option value={region.rg_id}>{region.rg_title}</option>\r\n                                              ))}\r\n                                          </select> */}\r\n                                          <select onChange={this.loadAreas} class=\"form-control\" required={this.state.regionRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {region && region.map((region, index) => (\r\n                                                  <option value={region.rg_id}>{region.rg_title}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div> \r\n\r\n                                    {/* <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.stateDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">State</label>\r\n                                          <select onChange={this.loadCities} class=\"form-control\" required={this.state.stateRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {states && states.map((state, index) => (\r\n                                                  <option value={state.id}>{state.name}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div> */}\r\n\r\n                                    <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.areaDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">Area</label>\r\n                                          <select onChange={this.loadRSM} class=\"form-control\" required={this.state.areaRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {area && area.map((area, index) => (\r\n                                                  <option value={area.ar_id}>{area.ar_title}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {/* <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.cityDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">City</label>\r\n                                          <select onChange={this.loadRSM} class=\"form-control selectpicker\" required={this.state.cityRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {cities && cities.map((city, index) => (\r\n                                                  <option value={city.id}>{city.city_name}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div> */}\r\n\r\n                                    <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.rsmDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">RSM</label>\r\n                                          <select onChange={this.loadASM} class=\"form-control\" required={this.state.rsmRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {rsms && rsms.map((rsms, index) => (\r\n                                                  <option value={rsms.u_id}>{rsms.u_name}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-2\">\r\n                                      <div class=\"form-group\" style={{ display : this.state.asmDisplay }}>\r\n                                          <label class=\"form-control-label\" for=\"input-username\">ASM</label>\r\n                                          <select onChange={this.loadType} class=\"form-control\" required={this.state.asmRequired}>\r\n                                              <option selected value=\"\">Select</option>\r\n                                              {asms && asms.map((asms, index) => (\r\n                                                  <option value={asms.u_id}>{asms.u_name}</option>\r\n                                              ))}\r\n                                          </select>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className={\"spinner-border \"+this.state.dnone}></div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-control-label\" for=\"input-username\">Name</label>\r\n                                            <input required type=\"text\" name=\"name\" value={this.state.name} class=\"form-control form-control-alternative\" onChange={this.handleChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-control-label\" for=\"input-email\">Mobile</label>\r\n                                            <input required type=\"number\" id=\"input-email\" class=\"form-control form-control-alternative\" name=\"mobile\" onChange={this.handleChange} value={this.state.mobile}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"text-center\">\r\n                                      <button type=\"submit\" class=\"btn btn-primary my-4\">Add</button>\r\n                                      <small>Password will be the mobile number. User may change password after login!</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddStaff;","import React, { Component } from \"react\";\r\nimport UserService from \"../../services/users\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\n//import { ToastContainer } from \"react-toastr\";\r\nimport { ToastContainer, toast } from 'react-toastify';    \r\nimport 'react-toastify/dist/ReactToastify.css';    \r\nclass AddStaff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      id : this.props.match.params.id,\r\n      name : '',\r\n      mobile : '',\r\n      type : '',\r\n      type_id : '',\r\n      // region : '',\r\n      // area : '',\r\n      state : '',\r\n      city : '',\r\n      rsm_name : '',\r\n      asm_name : '',\r\n      className : '',\r\n      asms : '',\r\n      tsms : '',\r\n      rsms : '',\r\n      rsm : ''\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    let inputName = event.target.name;\r\n    this.setState({ [inputName] : event.target.value });\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    this.setState({ className : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ className : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        mobile : this.state.mobile,\r\n        name : this.state.name,\r\n        rsm : this.state.rsm,\r\n      };\r\n\r\n      UserService.update( this.state.id, data )\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n          this.setState({ className : 'was-validated'  } );\r\n        } else {\r\n          toast.success(response.data.message);\r\n          this.retrieveUserDetail();\r\n          //this.props.history.push(\"/staff\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUserDetail();\r\n  }\r\n\r\n\r\n  retrieveUserDetail() {\r\n    UserService.get(this.state.id)\r\n      .then(response => {\r\n        console.log('response.data',response.data);\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                name : response.data.payload.u_name,\r\n                mobile : response.data.payload.u_mobile,\r\n                type : response.data.payload.ur_title,\r\n                // region : response.data.payload.rg_title,\r\n                // area : response.data.payload.ar_title,\r\n                state : response.data.payload.state_name,\r\n                city : response.data.payload.city_name,\r\n                rsm_name : response.data.payload.rsm_name,\r\n                asm_name : response.data.payload.asm_name,\r\n                type_id : response.data.payload.u_fk_ur_id,\r\n                asms : response.data.payload.asms ?? '',\r\n                tsms : response.data.payload.tsms ?? '',\r\n            }, () => {\r\n              UserService.rsmList( { regionId : response.data.payload.u_fk_rg_id, areaId : response.data.payload.u_fk_ar_id } )\r\n                .then(response => {\r\n                  if ( response.data.status == true ) {\r\n                      this.setState({\r\n                          rsms: response.data.payload ?? ''\r\n                      });\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { roles, state, city, tsms, asms, rsms } = this.state;\r\n    console.log('tsms',tsms);\r\n    console.log('asms',asms);\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card bg-secondary shadow\">\r\n                        <div class=\"card-header bg-white border-0\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col-8\">\r\n                            <h3 class=\"mb-0\">Edit Staff Member</h3>\r\n                            </div>\r\n                            <div class=\"col-4 text-right\">\r\n                                <Link to={\"/staff\"} className=\"btn btn-sm btn-primary\">\r\n                                    Staff List\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                          <div class='row'>\r\n                            <div class='col-md-6'>\r\n                              <Form method=\"post\" className={this.state.className} noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                                  <h6 class=\"heading-small text-muted mb-4\">User information</h6>\r\n                                  <div class=\"pl-lg-4\">\r\n                                      <div class=\"row\">\r\n                                          <div class=\"row col-lg-12\">\r\n                                            <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\">\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">User Type</label>\r\n                                                  <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.type} disabled></input>\r\n                                              </div>\r\n                                            </div>\r\n                                            { ( this.state.type_id == 3 || this.state.type_id == 4 || this.state.type_id == 5 )  &&\r\n                                            // <div class=\"col-lg-2\">\r\n                                            //   <div class=\"form-group\" style={{ display : this.state.regionDisplay }}>\r\n                                            //       <label class=\"form-control-label\" for=\"input-username\">Region</label>\r\n                                            //       <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.region} disabled></input>\r\n                                            //   </div>\r\n                                            // </div>\r\n\r\n                                              <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\">\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">State</label>\r\n                                                  <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.state} disabled></input>\r\n                                              </div>\r\n                                              </div>\r\n                                            }\r\n                                            { ( this.state.type_id == 3 || this.state.type_id == 4 || this.state.type_id == 5 )  &&\r\n                                            // <div class=\"col-lg-2\">\r\n                                            //   <div class=\"form-group\" style={{ display : this.state.areaDisplay }}>\r\n                                            //       <label class=\"form-control-label\" for=\"input-username\">Area</label>\r\n                                            //       <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.area} disabled></input>\r\n                                            //   </div>\r\n                                            // </div>\r\n                                              <div class=\"col-lg-6\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"form-control-label\" for=\"input-username\">City</label>\r\n                                                    <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.city} disabled></input>\r\n                                                </div>\r\n                                              </div>\r\n                                            }\r\n                                            { ( this.state.type_id == 4 || this.state.type_id == 5 )  &&\r\n                                            <div class=\"col-lg-6\">\r\n                                              { ( this.state.rsm_name != null )\r\n                                              ? <div class=\"form-group\" style={{ display : this.state.rsmDisplay }}>\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">RSM</label>\r\n                                                  <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.rsm_name} disabled ></input>\r\n                                                </div>\r\n                                              : <div class=\"form-group\" style={{ display : this.state.rsmDisplay }}>\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">RSM</label>\r\n                                                  <select name='rsm' onChange={this.handleChange}  class=\"form-control\" required >\r\n                                                      <option  selected value=\"\">Select</option>\r\n                                                      {rsms && rsms.map((rsms, index) => (\r\n                                                          <option  value={rsms.u_id}>{rsms.u_name}</option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                </div>\r\n                                              }\r\n                                            </div>\r\n                                            }\r\n                                            { this.state.type_id == 5 &&\r\n                                            <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\" style={{ display : this.state.asmDisplay }}>\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">ASM</label>\r\n                                                  <input type=\"text\" class=\"form-control form-control-alternative\" value={this.state.asm_name} disabled></input>\r\n                                              </div>\r\n                                            </div>\r\n                                            }\r\n                                          </div>\r\n                                          <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\">\r\n                                                  <label class=\"form-control-label\" for=\"input-username\">Name</label>\r\n                                                  <input required type=\"text\" name=\"name\" value={this.state.name} class=\"form-control form-control-alternative\" onChange={this.handleChange}/>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\">\r\n                                                  <label class=\"form-control-label\" for=\"input-email\">Mobile</label>\r\n                                                  <input required type=\"number\" id=\"input-email\" class=\"form-control form-control-alternative\" name=\"mobile\" onChange={this.handleChange} value={this.state.mobile}/>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div class=\"col-lg-6\">\r\n                                              <div class=\"form-group\">\r\n                                                <button type=\"submit\" class=\"btn btn-primary my-4\">Update</button>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </Form>\r\n                            </div>\r\n\r\n                            <div class='col-md-6'>\r\n                              <h6 class=\"heading-small text-muted mb-4\">Staff information</h6>\r\n\r\n                              { (this.state.type_id == 3 && asms.length > 0 ) &&\r\n                                <div class=\"accordion my-3\" id=\"accordionExample\">\r\n                                  {asms.map((asm, index) => (\r\n                                    <div class=\"card\">\r\n                                      <div class=\"card-header\" id=\"headingOne\" id={'headingOne'+index}>\r\n                                        <h5 class=\"mb-0\">\r\n                                          <button class=\"btn btn-link w-100 text-primary text-left\" type=\"button\" data-toggle=\"collapse\" data-target={\"#collapseOne\"+index} aria-expanded={ index == 0 ? true : false} aria-controls={\"collapseOne\"+index}>\r\n                                            {asm.u_name}\r\n                                            <i class=\"ni ni-bold-down float-right\">{asm.u_mobile}</i>\r\n                                          </button>\r\n                                        </h5>\r\n                                      </div>\r\n                                      <div id={\"collapseOne\"+index} class={ index == 0 ? 'collapse show' : 'collapse'} aria-labelledby={\"headingOne\"+index} aria-labelledby={\"headingOne\"+index} data-parent=\"#accordionExample\">\r\n                                        <div class=\"card-body opacity-8\">\r\n                                          {asm.tsms.length > 0 &&\r\n                                            <ul class=\"list-group\">\r\n                                              {asm.tsms.map((tsm, index) => (\r\n                                                <li class=\"d-flex justify-content-between align-items-center\">\r\n                                                  <label class=\"form-control-label\" for=\"input-address\">{tsm.u_name}</label>\r\n                                                  <span>{tsm.u_mobile}</span>\r\n                                                </li>\r\n                                              ))}\r\n                                            </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>  \r\n                              }\r\n                              \r\n                              { (this.state.type_id == 4 && tsms.length > 0 ) &&\r\n                                <div>\r\n                                  {tsms.length > 0 &&\r\n                                    <ul class=\"list-group\">\r\n                                      {tsms.map((tsm, index) => (\r\n                                        <li class=\"d-flex justify-content-between align-items-center\">\r\n                                          <label class=\"form-control-label\" for=\"input-address\">{tsm.u_name}</label>\r\n                                          <span>{tsm.u_mobile}</span>\r\n                                        </li>\r\n                                      ))}\r\n                                    </ul>\r\n                                  }\r\n                                </div>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n              </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddStaff;","import http from \"../http-common\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nclass CategoryDataService {\r\n  getAll(data) {\r\n    return http.post(\"/category-list\", data, {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n\r\n  get(id) {\r\n    return http.get(`/category/${id}`, {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/category\", data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/category/${id}`, data, {\r\n      body : data,\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/category/${id}`, {\r\n      headers: { 'Authorization' : Cookies.get('session') }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default new CategoryDataService();","import React, { Component } from \"react\";\r\nimport CategoryService from \"../../services/category\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../layout/pagination\";\r\nimport Switch1 from \"./switch\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {  toast } from 'react-toastify'; \r\n//import { Switch, FormControl, FormLabel, FormHelperText, FormGroup, FormControlLabel } from '@material-ui/core';\r\n\r\n\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handlePaginationChange = this.handlePaginationChange.bind(this);\r\n\r\n    this.retrieveTherapies = this.retrieveTherapies.bind(this);\r\n\r\n    this.state = {\r\n        therapies: [],\r\n        per_page : 5,\r\n        total_records : 0,\r\n        page : 0,\r\n        total_pages : 1,\r\n        dnone : 'd-none',\r\n    };\r\n  }\r\n\r\n  confirm = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui'>\r\n            <h1>Are you sure?</h1>\r\n            <p>You want to delete this Category?</p>\r\n            <button onClick={onClose}>No</button>\r\n            <button\r\n              onClick={() => {\r\n                this.handleClickDelete(id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it!\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  updateStatus = (event) => {\r\n    console.log('event.target.checked',event.target.checked);\r\n    console.log('event',event.target.value);\r\n    let data = {\r\n      isactive : event.target.checked ? '1' : '0'\r\n    };\r\n    CategoryService.update( event.target.value, data )\r\n        .then(response => {\r\n            if ( response.data.status == false ) {\r\n            toast.error(response.data.message);\r\n            this.setState({ className : 'was-validated'  } );\r\n            } else {\r\n            toast.success(response.data.message);\r\n            this.props.history.push(\"/categories\");\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n  }\r\n\r\n  handleClickDelete = (id) => {\r\n    CategoryService.delete(id)\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n        } else {\r\n          toast.success(response.data.message);\r\n          let total_records = this.state.total_records-1;\r\n          let total_pages = Math.ceil(total_records/this.state.per_page);\r\n          let page = this.state.page;\r\n          if ( page > total_pages-1 ) {\r\n            page = total_pages-1;\r\n            this.setState({\r\n              page : total_pages-1,\r\n            },() => {\r\n              this.retrieveTherapies();\r\n            });\r\n          } else {\r\n            this.retrieveTherapies();\r\n          }\r\n          //this.props.history.push(\"/staff\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTherapies();\r\n  }\r\n\r\n  onChangefilter(e) {\r\n    \r\n    this.setState({\r\n        //staffType: e.target.value,\r\n        page : 0,\r\n    }, () => {\r\n        this.retrieveTherapies();\r\n    });\r\n  }\r\n\r\n  handlePaginationChange(page) {\r\n    this.setState({\r\n      page : page,\r\n    },() => {\r\n      this.retrieveTherapies();\r\n    });\r\n  }\r\n\r\n  /*onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }*/\r\n\r\n  retrieveTherapies() {\r\n    console.log('this.state',this.state);\r\n    this.setState({\r\n      dnone : '',\r\n    });\r\n    let data = {\r\n        //staffType : this.state.staffType,\r\n        page : this.state.page,\r\n        per_page : this.state.per_page\r\n    };\r\n\r\n    CategoryService.getAll(data)\r\n      .then(response => {\r\n        this.setState({\r\n          therapies: response.data.payload.data,\r\n          total_records : response.data.payload.total_records,\r\n          page : response.data.payload.page_number,\r\n          total_pages : response.data.payload.total_pages,\r\n          dnone : 'd-none',\r\n        });\r\n        //console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n\r\n  orderHandler = (e,el) => {\r\n    let orderInput = document.querySelectorAll('.orderInput');\r\n    orderInput.forEach((item) => {\r\n      if ( item.id != 'orderInput'+e ) {\r\n        item.value=item.getAttribute('oldValue');\r\n      }\r\n    })\r\n    let elements = document.querySelectorAll('.saveIcon');\r\n    elements.forEach((item) => {\r\n      item.style.display = 'none';\r\n    })\r\n    document.getElementById(e).style.display='block';\r\n  }\r\n\r\n\r\n  updateOrder = (e) => {\r\n    let data = {\r\n        order : document.getElementById('orderInput'+e).value\r\n    };\r\n    CategoryService.update( e, data )\r\n      .then(response => {\r\n        if ( response.data.status == false ) {\r\n          toast.error(response.data.message);\r\n          this.setState({ className : 'was-validated'  } );\r\n        } else {\r\n          toast.success(response.data.message);\r\n          //document.getElementsById('orderInput'+e).value\r\n          //this.props.history.push(\"/therapies\");\r\n          document.getElementById(e).style.display='none';\r\n          this.setState(\r\n            { page : 0 },() => {\r\n            this.retrieveTherapies();\r\n          });\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n  }\r\n\r\n\r\n  hideIcon = (e) => {\r\n    document.getElementById(e).style.display='none';\r\n    let element = document.getElementById('orderInput'+e);\r\n    element.value=element.getAttribute('oldValue');\r\n  }\r\n\r\n \r\n  render() {\r\n    const { therapies, per_page, total_records, page, total_pages } = this.state;\r\n    let paginationVariable = {\r\n        per_page : per_page,\r\n        total_records : total_records,\r\n        page : page,\r\n        total_pages : total_pages\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card shadow\">\r\n                        <div class=\"card-header border-0\">\r\n                            {/* <h3 class=\"mb-0\">Card tables</h3> */}\r\n                            <div class=\"row align-items-center\">\r\n                                <div class=\"col-4\">\r\n                                    <h3 class=\"mb-0\">Category List</h3>\r\n                                </div>\r\n                                {/* <div class=\"col-4\">\r\n                                    <select onChange={this.onChangefilter} class=\"form-control\">\r\n                                        <option  value=\"\">All</option>\r\n                                        <option  value=\"2\">ADMIN</option>\r\n                                        <option  value=\"3\">RSM</option>\r\n                                        <option  value=\"4\">ASM</option>\r\n                                        <option  value=\"5\">TSM</option>\r\n                                    </select>\r\n                                </div> */}\r\n                                <div class=\"col-8 text-right\">\r\n                                    <Link to={\"/add-category\"} className=\"btn btn-sm btn-primary\">\r\n                                        Add New\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive\">\r\n                        <table class=\"table align-items-center table-flush\">\r\n                            <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Title</th>\r\n                                {/* <th scope=\"col\">Role</th>\r\n                                <th scope=\"col\">Order</th> */}\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td colspan=\"4\" className={this.state.dnone} style={{ 'text-align' : 'center' }} >\r\n                                  <div className={\"spinner-border \"}></div>\r\n                                </td>\r\n                            </tr>\r\n                            {therapies && therapies.map((therapy, index) => (\r\n                                <tr key={therapy.cat_uuid}>\r\n                                    <th scope=\"row\">\r\n                                        <div class=\"media align-items-center\">\r\n                                            <div class=\"media-body\">\r\n                                            <span class=\"mb-0 text-sm\">{therapy.cat_name}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    {/*<td class=\"text-left\">\r\n                                      <input class=\"form-control col-md-3 orderInput\" oldValue={therapy.th_order} type=\"number\" defaultValue={therapy.th_order} id={'orderInput'+therapy.th_uuid}  onChange={() => this.orderHandler(therapy.th_uuid,therapy.th_order)} ref={(input) => this.input = input} />\r\n                                      <div id={therapy.th_uuid} className={'saveIcon'} style={{display:'none'}}>\r\n                                        <a href=\"#!\" onClick={() => this.updateOrder(therapy.th_uuid)}><i className=\"fa fa-check-circle\"></i></a>\r\n                                        <a href=\"#!\" onClick={() => this.hideIcon(therapy.th_uuid)}><i className=\"fa fa-window-close \"></i></a>\r\n                                      </div>\r\n\t\t\t\t\t\t\t\t\t</td>*/}\r\n                                    <td class=\"text-left\">\r\n                                        <div class=\"dropdown\">\r\n                                          {/*<Switch1 id={therapy.th_uuid} value={therapy.th_isactive} updateStatus={this.updateStatus} /> */}\r\n                                          <Link to={\"/add-category/\"+therapy.cat_uuid} className=\"\">\r\n                                              <i className=\"fa fa-edit\"></i>\r\n                                          </Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                          <a class=\"\" href=\"#!\" onClick={ () => this.confirm(therapy.cat_uuid) }><i className=\"fa fa-trash\"></i></a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                        <Pagination paginationVariable={paginationVariable} handlePaginationChange={this.handlePaginationChange}/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;","import React, {Component} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nclass Switch1 extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n          id: this.props.id,\r\n          value : this.props.value,\r\n      };\r\n    }\r\n    render() {\r\n      return (\r\n        <Switch \r\n          value={this.state.id} \r\n          defaultChecked={ this.state.value == '1' ? true : false } \r\n          onChange={this.props.updateStatus} \r\n        />\r\n      );\r\n    }\r\n}\r\n\r\nexport default Switch1;\r\n","import React, { Component } from \"react\";\r\nimport CategoryService from \"../../services/category\";\r\nimport Footer from \"../layout/footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Col, InputGroup } from \"react-bootstrap\";\r\nimport {  toast } from 'react-toastify';    \r\nimport 'react-toastify/dist/ReactToastify.css';    \r\n\r\nclass Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    \r\n\r\n    this.state = {\r\n      id : this.props.match.params.id,\r\n      title : '',\r\n      className : '',\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    let inputName = event.target.name;\r\n    this.setState({ [inputName] : event.target.value });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if ( this.state.id ) {\r\n        this.retrieveTherapyDetail();\r\n    }\r\n  }\r\n\r\n\r\n  retrieveTherapyDetail() {\r\n    CategoryService.get(this.state.id)\r\n      .then(response => {\r\n        if ( response.data.status == true ) {\r\n            this.setState({\r\n                title : response.data.payload.cat_name,\r\n            });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit (event) {\r\n    this.setState({ className : '', errors : ''  } );\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ className : 'was-validated' } );\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let data = {\r\n        title : this.state.title,\r\n      };\r\n\r\n      if ( this.state.id ) {\r\n        CategoryService.update( this.state.id, data )\r\n        .then(response => {\r\n            if ( response.data.status == false ) {\r\n            toast.error(response.data.message);\r\n            this.setState({ className : 'was-validated'  } );\r\n            } else {\r\n            toast.success(response.data.message);\r\n            this.props.history.push(\"/categories\");\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n      } else {\r\n        CategoryService.create(data)\r\n        .then(response => {\r\n            if ( response.data.status == false ) {\r\n            toast.error(response.data.message);\r\n            this.setState({ className : 'was-validated'  } );\r\n            } else {\r\n            toast.success(response.data.message);\r\n            this.props.history.push(\"/categories\");\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        }); \r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n \r\n  render() {\r\n    const  { id } = this.state;\r\n    let h3 = 'Add New Category';\r\n    let buttonTXT = 'Add';\r\n    if ( id != undefined ) {\r\n        h3 = 'Update Category';\r\n        buttonTXT = 'Update';\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container-fluid mt--7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <div class=\"card bg-secondary shadow\">\r\n                        <div class=\"card-header bg-white border-0\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col-8\">\r\n                                <h3 class=\"mb-0\">{h3}</h3>\r\n                            </div>\r\n                            <div class=\"col-4 text-right\">\r\n                                <Link to={\"/categories\"} className=\"btn btn-sm btn-primary\">\r\n                                    Category List\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                        <Form method=\"post\" className={this.state.className} noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                            <div class=\"pl-lg-4\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-control-label\" for=\"title\">Title</label>\r\n                                            <input required type=\"text\" name=\"title\" value={this.state.title} class=\"form-control form-control-alternative\" onChange={this.handleChange}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary my-4\">{buttonTXT}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Footer></Footer>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;","import React, { Component } from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './assets/js/plugins/nucleo/css/nucleo.css';\r\nimport './assets/js/plugins/@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n//import './assets/scss/argon-dashboard.scss';\r\nimport './assets/css/argon-dashboard.css';\r\nimport './assets/css/custom.css';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport LoginHeaderbg from \"./loginheaderbg\";\r\nimport verifyEmail from \"./email_verification\";\r\nimport LoginIndex from \"./loginindex\";\r\nimport UserService from \"../../services/users\";\r\nimport Headerbg from \"./headerbg\";\r\nimport Navtop from \"./navtop\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Sidebar from \"./sidebar\";\r\n\r\nimport Users from \"../user\";\r\nimport AddStaff from \"../user/add_staff\";\r\nimport EditStaff from \"../user/edit_staff\";\r\n\r\nimport Profile from \"../user/profile\";\r\n\r\nimport Categories from \"../category/\";\r\nimport addCategory from \"../category/add\";\r\n\r\n//import testList from \"../tests/\";\r\n//import addTest from \"../tests/add\";\r\n\r\n//import dodontList from \"../dodont/\";\r\n//import addDodont from \"../dodont/add\";\r\n\r\n//import dietexercisetList from \"../dietexercise\";\r\n//import addDietexercise from \"../dietexercise/add\";\r\n\r\n//import Patients from \"../user/patients\";\r\n//import PatientDetail from \"../user/patient_detail\";\r\n\r\n//import FieldManagers from \"../user/field_managers\";\r\n\r\n//import ViralLoadTest from \"../tests/viral_load\";\r\n\r\n//import PurchaseRequest from \"../purchases/index\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nclass Index extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isUserLoggedIn : false\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const sessionCookie = Cookies.get(\"session\");\r\n      if ( sessionCookie && sessionCookie != '' ) {\r\n        UserService.loginStatus(sessionCookie)\r\n        .then(response => {\r\n          if ( response.data.status == false ) {\r\n            this.setState({ className : 'was-validated', errors : response.data.message  } );\r\n          } else {\r\n            this.props.loggedin();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        this.setState( { isUserLoggedIn : true } );\r\n      }\r\n    }\r\n\r\n\r\n    loggedin = ( status = true ) => {\r\n      if ( status == false ) {\r\n        this.setState( { isUserLoggedIn : false } );\r\n        Cookies.remove(\"session\");\r\n      } else {\r\n        this.setState( { isUserLoggedIn : true } );\r\n      }\r\n    };\r\n    render() {\r\n      if ( this.state.isUserLoggedIn == true ) {\r\n        return (\r\n          <React.Fragment>\r\n            <ToastContainer />\r\n            <Sidebar></Sidebar>\r\n            <div className=\"main-content\">\r\n              {/* <Header loggedin={this.loggedin}></Header> */}\r\n              <Navtop loggedin={this.loggedin}></Navtop>\r\n              <Headerbg></Headerbg>\r\n              {/* <Index></Index> */}\r\n              <Switch>\r\n                <Route exact path={[\"/\"]} component={Dashboard} />\r\n\t\t\t\t\r\n                <Route exact path={[\"/users\"]} component={Users} />\r\n        {/*        <Route exact path={[\"/add-staff\"]} component={AddStaff} />\r\n                <Route exact path={[\"/edit-staff/:id\"]} component={EditStaff} />\r\n\t\t\t\t*/}\r\n                <Route exact path={[\"/profile\"]} component={Profile} />\r\n\r\n                <Route exact path={[\"/add-category\"]} component={addCategory} />\r\n                <Route exact path={[\"/add-category/:id\"]} component={addCategory} />\r\n                <Route exact path={[\"/categories\"]} component={Categories} />\r\n\t\t\t\t\r\n\t\t\t\t{/*\r\n                <Route exact path={[\"/add-test\"]} component={addTest} />\r\n                <Route exact path={[\"/add-test/:id\"]} component={addTest} />\r\n                <Route exact path={[\"/test-list\"]} component={testList} />\r\n\r\n                <Route exact path={[\"/do-dont\"]} component={dodontList} />\r\n                <Route exact path={[\"/add-dodont\"]} component={addDodont} />\r\n                <Route exact path={[\"/add-dodont/:id\"]} component={addDodont} />\r\n                \r\n                <Route exact path={[\"/diet-exercise\"]} component={dietexercisetList} />\r\n                <Route exact path={[\"/add-diet-exercise\"]} component={addDietexercise} />\r\n                <Route exact path={[\"/add-diet-exercise/:id\"]} component={addDietexercise} />\r\n\r\n                <Route exact path={[\"/patients\"]} component={Patients} />\r\n                <Route exact path={[\"/patients/:id\"]} component={PatientDetail} />\r\n                \r\n                <Route exact path={[\"/field-managers\"]} component={FieldManagers} />\r\n\r\n                <Route exact path={[\"/viral-load-test\"]} component={ViralLoadTest} />\r\n\r\n                <Route exact path={[\"/purchase-request\"]} component={PurchaseRequest} />\r\n\t\t\t\t*/}\r\n\t\t\t\t<Route exact path=\"/email-verify/:id\" component={verifyEmail} />\r\n\r\n                \r\n\r\n              </Switch>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"main-content\">\r\n            {/* <LoginHeader></LoginHeader> */}\r\n              {/* <Switch>\r\n                <Route exact path={[\"/\", \"/users\"]} component={UserList} />\r\n                <Route exact path=\"/users/add\" component={AddUser} />\r\n                <Route path=\"/users/:id\" component={User} />\r\n              </Switch> */}\r\n              <LoginHeaderbg></LoginHeaderbg>\r\n\t\t\t  <Switch>\r\n                {/* <Route exact path={[\"/\", \"/users\"]} component={UserList} />*/}\r\n                <Route exact path=\"/email-verify/:id\" component={verifyEmail} />\r\n                <Route path=\"/\" component={() => (<LoginIndex loggedin={this.loggedin} />)} /> \r\n              </Switch>\r\n              {/*<LoginIndex loggedin={this.loggedin}></LoginIndex>*/}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  export default Index;","import React, { Component } from \"react\";\nimport 'bootstrap';\n//import 'bootstrap/dist/js/bootstrap.js';\nimport Index from \"./components/layout/index\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Index></Index>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}